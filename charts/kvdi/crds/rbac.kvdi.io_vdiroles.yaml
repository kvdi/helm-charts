
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: vdiroles.rbac.kvdi.io
spec:
  group: rbac.kvdi.io
  names:
    kind: VDIRole
    listKind: VDIRoleList
    plural: vdiroles
    singular: vdirole
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: VDIRole is the Schema for the vdiroles API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          rules:
            description: A list of rules granting access to resources in the VDICluster.
            items:
              description: Rule represents a set of permissions applied to a VDIRole.
                It mostly resembles an rbacv1.PolicyRule, with resources being a regex
                and the addition of a namespace selector.
              properties:
                namespaces:
                  description: Namespaces this rule applies to. Only evaluated for
                    template launching permissions. Including "*" as an option matches
                    all namespaces.
                  items:
                    type: string
                  type: array
                resourcePatterns:
                  description: "Resource regexes that match this rule. This can be
                    template patterns, role names or user names. There is no All representation
                    because * will have that effect on its own when the regex is evaluated.
                    When referring to \"serviceaccounts\", only the \"use\" verb is
                    evaluated in the context of assuming those accounts in desktop
                    sessions. \n **NOTE**: The `kvdi-manager` is responsible for launching
                    pods with a service account requested for a given Desktop. If
                    the service account itself contains more permissions than the
                    manager itself, the Kubernetes API will deny the request. The
                    way to remedy this would be to either mirror permissions to that
                    ClusterRole, or make the `kvdi-manager` itself a cluster admin,
                    both of which come with inherent risks. In the end, you can decide
                    the best approach for your use case with regards to exposing access
                    to the Kubernetes APIs via kvdi sessions."
                  items:
                    type: string
                  type: array
                resources:
                  description: 'Resources this rule applies to. ResourceAll matches
                    all resources. Recognized options are: `["users", "roles", "templates",
                    "serviceaccounts", "*"]`'
                  items:
                    description: Resource represents the target of an API action
                    enum:
                    - users
                    - roles
                    - templates
                    - serviceaccounts
                    - '*'
                    type: string
                  type: array
                verbs:
                  description: 'The actions this rule applies for. VerbAll matches
                    all actions. Recognized options are: `["create", "read", "update",
                    "delete", "use", "launch", "*"]`'
                  items:
                    description: Verb represents an API action
                    enum:
                    - create
                    - read
                    - update
                    - delete
                    - use
                    - launch
                    - '*'
                    type: string
                  type: array
              type: object
            type: array
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
